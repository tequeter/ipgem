#!/bin/bash

set -e -u

. /etc/ipgem-gateway/networking

myname="$( basename "$0" )"
hosts=/etc/ipgem-gateway/hosts
now="$( date '+%F %T')"
declare -a ifmac=()
ifcfg=/etc/sysconfig/network-scripts

# Cleanup old config files, fill in ifmac[]
for i in "${!IFNAME[@]}"; do
	eth="${IFNAME[$i]}"
	rm -f "$ifcfg/ifcfg-$eth" "$ifcfg/ifcfg-$eth:"*
	ifmac[$i]="$( ip addr show dev $eth |grep ether |awk '{print $2}' )"
done

grep -v '^#' "$hosts" |grep '[0-9]' |while read name oldip newip; do
	# Figure out which eth to use for this host
	ifidx=
	for i in "${!IFNAME[@]}"; do
		if echo $oldip |fgrep -q "${IFNET_RE[$i]}"; then
			ifidx=$i
			break
		fi
	done
	if [ -z "$ifidx" ]; then
		echo "Don't know which network interface to use for $oldip" >&2
		exit 1
	fi

	# Determine if we're defining the parent or sub interface
	if [ ! -e "$ifcfg/ifcfg-${IFNAME[$ifidx]}" ]; then
		# First host for this network, write the parent config
		cat >"$ifcfg/ifcfg-${IFNAME[$ifidx]}" <<EOF
# Generated by $myname on $now, proxy for $name
DEVICE=${IFNAME[$ifidx]}
BOOTPROTO=static
DHCPCLASS=
HWADDR=${ifmac[$ifidx]}
IPADDR=$oldip
NETMASK=255.255.255.0
ONBOOT=yes
EOF
	else
		# Find a free subinterface
		subif=
		for (( i = 0; i < 1000; i++ )); do
			if [ ! -e "$ifcfg/ifcfg-${IFNAME[$ifidx]}:$i" ]; then
				subif="${IFNAME[$ifidx]}:$i"
				break
			fi
		done
		if [ -z "$subif" ]; then
			echo "Couldn't find a free subinterface of ${IFNAME[$ifidx]}" >&2
			exit 1
		fi

		# Configure it
		cat >"$ifcfg/ifcfg-$subif" <<EOF
# Generated by $myname on $now, proxy for $name
DEVICE=$subif
BOOTPROTO=static
ONPARENT=yes
IPADDR=$oldip
NETMASK=255.255.255.0
EOF
	fi
done

